<%- include('../layout/admin/adminHeader') -%>
  <nav class="navbar default-layout-navbar col-lg-12 col-12 p-0 fixed-top d-flex flex-row">
    <div class="text-center navbar-brand-wrapper d-flex align-items-center justify-content-center">
      <a class="navbar-brand brand-logo" href="">AudioVerse</a>
      <a class="navbar-brand brand-logo-mini" href=""><img src="/assets/images/logo-mini.svg" alt="logo" /></a>
    </div>
    <div class="navbar-menu-wrapper d-flex align-items-stretch">
      <button class="navbar-toggler navbar-toggler align-self-center" type="button" data-toggle="minimize">
        <span class="mdi mdi-menu"></span>
      </button>

      <div class="search-field d-none d-md-block">
        <div class="d-flex align-items-center h-100">
          <div class="input-group">
            <div class="input-group-prepend bg-transparent">
              <button class="btn-search border-0" id="searchButton">
                <i class="input-group-text border-0 mdi mdi-magnify"></i></button>
            </div>
            <input type="text" class="input-search" id="searchInput" value="<%= searchBrand%>"
              placeholder="Type to Search...">
          </div>
        </div>
      </div>

      <%- include('../layout/admin/adminNavbar') -%>

        <!-- Main Content -->
        <div class="main-panel">
          <div class="content-wrapper">
            <div class="page-header">
              <h3 class="page-title">Brand List</h3>
              <!-- Add Brand Button -->
              <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#addBrandModal">Add
                Brand</button>
            </div>

            <div class="row">
              <div class="col-12 grid-margin stretch-card">
                <div class="card">
                  <div class="card-body">
                    <h4 class="card-title">Brands</h4>
                    <p class="card-description">List of all brands</p>
                    <table class="table table-striped">
                      <thead>
                        <tr>
                          <th>No</th>
                          <th>Name</th>
                          <th>Actions</th>
                        </tr>
                      </thead>
                      <tbody>
                        <% brands.forEach((brand, index)=> { %>
                          <tr>
                            <td>
                              <%= (currentPage - 1) * 10 + index + 1 %>
                            </td> <!-- Adjust index for pagination -->
                            <td>
                              <%= brand.brandName %>
                            </td>
                            <td>
                              <% if (!brand.isDeleted) { %>
                                <a href="/admin/editBrand/<%= brand._id %>" class="btn btn-warning btn-sm">Edit</a>
                                <a href="/admin/deleteBrand/<%= brand._id %>" class="btn btn-danger btn-sm">Delete</a>
                                <% } else { %>
                                  <a href="/admin/restoreBrand/<%= brand._id %>"
                                    class="btn btn-success btn-sm">Restore</a>
                                  <% } %>
                            </td>
                          </tr>
                          <% }) %>
                      </tbody>
                    </table>

                    <!-- Pagination links -->
                    <div class="row mt-5">
                      <div class="col text-center">
                        <nav aria-label="Page navigation">
                          <ul class="pagination justify-content-center">
                            <% if (currentPage> 1) { %>
                              <li class="page-item">
                                <a class="page-link" href="/admin/brands?page=<%= currentPage - 1 %>"
                                  aria-label="Previous">
                                  <span aria-hidden="true">&laquo;</span>
                                </a>
                              </li>
                              <% } else { %>
                                <li class="page-item disabled">
                                  <a class="page-link" href="#" aria-label="Previous">
                                    <span aria-hidden="true">&laquo;</span>
                                  </a>
                                </li>
                                <% } %>

                                  <% for (let i=1; i <=totalPages; i++) { %>
                                    <% if (i===currentPage) { %>
                                      <li class="page-item active"><a class="page-link" href="#">
                                          <%= i %>
                                        </a></li>
                                      <% } else { %>
                                        <li class="page-item"><a class="page-link" href="/admin/brands?page=<%= i %>">
                                            <%= i %>
                                          </a></li>
                                        <% } %>
                                          <% } %>

                                            <% if (currentPage < totalPages) { %>
                                              <li class="page-item">
                                                <a class="page-link" href="/admin/brands?page=<%= currentPage + 1 %>"
                                                  aria-label="Next">
                                                  <span aria-hidden="true">&raquo;</span>
                                                </a>
                                              </li>
                                              <% } else { %>
                                                <li class="page-item disabled">
                                                  <a class="page-link" href="#" aria-label="Next">
                                                    <span aria-hidden="true">&raquo;</span>
                                                  </a>
                                                </li>
                                                <% } %>
                          </ul>
                        </nav>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>



            <!-- Add Brand Modal -->
            <div class="modal fade" id="addBrandModal" tabindex="-1" role="dialog" aria-labelledby="addBrandModalLabel"
              aria-hidden="true">
              <div class="modal-dialog" role="document">
                <div class="modal-content">
                  <div class="modal-header">
                    <h5 class="modal-title" id="addBrandModalLabel">Add Brand</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                      <span aria-hidden="true">&times;</span>
                    </button>
                  </div>
                  <div class="modal-body">
                    <!-- Error Message Div -->
                    <div id="errorMessage" class="alert alert-danger" style="display: none;">
                      <strong>Error!</strong> <span id="errorText"></span>
                    </div>

                    <!-- Form for adding brand -->
                    <form id="addBrandForm">
                      <div class="form-group">
                        <label for="brandName">Brand Name</label>
                        <input type="text" class="form-control" id="brandName" name="brandName"
                          placeholder="Enter brand name" required>
                      </div>
                      <button type="submit" class="btn btn-primary">Add Brand</button>
                    </form>
                  </div>
                </div>
              </div>
            </div>
            <!-- Edit Brand Modal -->
            <div class="modal fade" id="editBrandModal" tabindex="-1" role="dialog"
              aria-labelledby="editBrandModalLabel" aria-hidden="true">
              <div class="modal-dialog" role="document">
                <div class="modal-content">
                  <div class="modal-header">
                    <h5 class="modal-title" id="editBrandModalLabel">Edit Brand</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                      <span aria-hidden="true">&times;</span>
                    </button>
                  </div>
                  <div class="modal-body">
                    <form id="editBrandForm">
                      <input type="hidden" id="editBrandId">
                      <div class="form-group">
                        <label for="editBrandName">Brand Name</label>
                        <input type="text" class="form-control" id="editBrandName" placeholder="Enter brand name">
                      </div>
                    </form>
                  </div>
                  <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-primary" id="saveBrandChanges">Save changes</button>
                  </div>
                </div>
              </div>
            </div>
          </div>

          <%- include('../layout/admin/adminFooter') -%>

            <script>
              document.getElementById('addBrandForm').addEventListener('submit', async function (e) {
                e.preventDefault();

                const brandName = document.getElementById('brandName').value;
                const errorMessageDiv = document.getElementById('errorMessage');
                const errorText = document.getElementById('errorText');

                errorMessageDiv.style.display = 'none';

                if (!brandName) {
                  errorText.innerText = "Brand name is required.";
                  errorMessageDiv.style.display = 'block';
                  return;
                }

                try {
                  const response = await fetch('/admin/addbrand', {
                    method: 'POST',
                    headers: {
                      'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ brandName }),
                  });

                  const data = await response.json();

                  if (data.success) {
                    $('#addBrandModal').modal('hide');
                    location.reload();
                  } else {
                    errorText.innerText = data.message || "Error adding brand.";
                    errorMessageDiv.style.display = 'block';
                  }
                } catch (error) {
                  console.error('Error:', error);
                  errorText.innerText = 'An error occurred while adding the brand.';
                  errorMessageDiv.style.display = 'block';
                }
              });

              document.addEventListener('DOMContentLoaded', () => {
                // Handle Delete and Restore Buttons
                document.querySelectorAll('.btn-danger').forEach(button => {
                  button.addEventListener('click', function (event) {
                    event.preventDefault();
                    const brandId = this.getAttribute('href').split('/').pop();

                    Swal.fire({
                      title: 'Are you sure?',
                      text: "You won't be able to revert this!",
                      icon: 'warning',
                      showCancelButton: true,
                      confirmButtonColor: '#d33',
                      cancelButtonColor: '#3085d6',
                      confirmButtonText: 'Yes, delete it!'
                    }).then((result) => {
                      if (result.isConfirmed) {
                        fetch(`/admin/deleteBrand/${brandId}`, {
                          method: 'DELETE' // Generally DELETE method is used for delete operations
                        })
                          .then(response => response.json())
                          .then(data => {
                            if (data.success) {
                              Swal.fire('Deleted!', data.message, 'success')
                                .then(() => location.reload());
                            } else {
                              Swal.fire('Error!', data.message, 'error');
                            }
                          })
                          .catch(error => {
                            console.error('Error:', error);
                            Swal.fire('Error!', 'Something went wrong!', 'error');
                          });
                      }
                    });
                  });
                });

                document.querySelectorAll('.btn-success').forEach(button => {
                  button.addEventListener('click', function (event) {
                    event.preventDefault();
                    const brandId = this.getAttribute('href').split('/').pop();

                    Swal.fire({
                      title: 'Are you sure?',
                      text: "You want to restore this brand!",
                      icon: 'warning',
                      showCancelButton: true,
                      confirmButtonColor: '#3085d6',
                      cancelButtonColor: '#d33',
                      confirmButtonText: 'Yes, restore it!'
                    }).then((result) => {
                      if (result.isConfirmed) {
                        fetch(`/admin/restoreBrand/${brandId}`, {
                          method: 'PUT' // Use PUT for restoration if that's how it's handled
                        })
                          .then(response => response.json())
                          .then(data => {
                            if (data.success) {
                              Swal.fire('Restored!', data.message, 'success')
                                .then(() => location.reload());
                            } else {
                              Swal.fire('Error!', data.message, 'error');
                            }
                          })
                          .catch(error => {
                            console.error('Error:', error);
                            Swal.fire('Error!', 'Something went wrong!', 'error');
                          });
                      }
                    });
                  });
                });



                // Handle Edit Button
                document.querySelectorAll('.btn-warning').forEach(button => {
                  button.addEventListener('click', function (event) {
                    event.preventDefault();
                    const brandId = this.getAttribute('href').split('/').pop();

                    fetch(`/admin/getBrand/${brandId}`)
                      .then(response => response.json())
                      .then(data => {
                        if (data.success) {
                          document.getElementById('editBrandId').value = data.brand._id;
                          document.getElementById('editBrandName').value = data.brand.brandName;
                          $('#editBrandModal').modal('show');
                        } else {
                          Swal.fire('Error!', data.message, 'error');
                        }
                      })
                      .catch(error => {
                        console.error('Error:', error);
                        Swal.fire('Error!', 'Something went wrong!', 'error');
                      });
                  });
                });

                document.getElementById('saveBrandChanges').addEventListener('click', function (event) {
                  event.preventDefault();

                  const brandId = document.getElementById('editBrandId').value;
                  const brandName = document.getElementById('editBrandName').value.trim();

                  if (!brandName) {
                    Swal.fire('Error!', 'Brand name is required!', 'error');
                    return;
                  }

                  fetch(`/admin/updateBrand/${brandId}`, {
                    method: 'PUT', // Ensure this matches the server's expected method
                    headers: {
                      'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ brandName })
                  })
                    .then(response => response.json())
                    .then(data => {
                      if (data.success) {
                        Swal.fire('Updated!', data.message, 'success')
                          .then(() => location.reload());
                      } else {
                        Swal.fire('Error!', data.message, 'error');
                      }
                    })
                    .catch(error => {
                      console.error('Error:', error);
                      Swal.fire('Error!', 'Something went wrong!', 'error');
                    });
                });
              });



              const searchInput = document.getElementById('searchInput');
              searchInput.addEventListener('input', function () {
                const inputValue = searchInput.value;
                if (!inputValue) {
                  window.location.href = '/admin/brands';
                }
                console.log(inputValue);
              });

              const searchButton = document.getElementById('searchButton');
              searchButton.addEventListener('click', function () {
                const query = searchInput.value;
                if (query.trim() !== "") {
                  window.location.href = `/admin/brands?searchBrand=${encodeURIComponent(query)}`;
                } else {
                  alert('Please enter a search term');
                }
              });


            </script>