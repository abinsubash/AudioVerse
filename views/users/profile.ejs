<%- include('../layout/profileHeader') -%>
<%- include('../layout/navbar') -%>
<%- include('../layout/profileNav') -%>

        <div class="col-lg-8">
          <div class="card mb-4">
            <div class="card-body">
              <div class="row">
                <div class="col-sm-3">
                  <p class="mb-0">Full Name</p>
                </div>
                <div class="col-sm-9">
                  <p class="text-muted mb-0"><%= user.name %></p>
                </div>
              </div>
              <hr>
              <div class="row">
                <div class="col-sm-3">
                  <p class="mb-0">Email</p>
                </div>
                <div class="col-sm-9">
                  <p class="text-muted mb-0"><%= user.email%></</p>
                </div>
              </div>
              <hr>
              <div class="row">
                <div class="col-sm-3">
                  <p class="mb-0">Mobile</p>
                </div>
                <div class="col-sm-9">
                  <p class="text-muted mb-0"><%= user.phone%></p>
                </div>
              </div>
              
              <hr>
              <div class="row">
                <div class="col-sm-3">
                  <p class="mb-0">Refferal code</p>
                </div>
                <div class="col-sm-9">
                  <p class="text-muted mb-0"><%= user.referalID%></p>
                </div>
              </div>

              <% if(!user.isReferred){%>
                <hr>
                <div class="row">
                  <div class="col-sm-3">
                    <p class="mb-0">Claim Referral Bonus</p>
                  </div>
                  <div class="col-sm-9">
                    <!-- Added styling for input -->
                    <input type="text" id="referralCode" class="form-control" placeholder="Enter referral code" aria-label="Referral Code">
                    <button class="btn btn-primary mt-2" id="claimButton">Claim</button>
                  </div>
                </div>
              <%}%>              
              </div>
          </div>
          <!-- Profile action buttons --> 
          <div class="d-flex justify-content-end mt-4">
            <a href="#" class="btn btn-success btn-sm me-2" data-bs-toggle="modal" data-bs-target="#editProfileModal">Edit Profile</a>
            <button type="button" class="btn btn-warning-custom btn-sm" data-toggle="modal" data-target="#changePasswordModal">Change Password</button>
          </div>
        </div>
      </div>
    </div>
  </section>

  <!-- change Password -->
  <div class="modal fade" id="changePasswordModal" tabindex="-1" role="dialog" aria-labelledby="changePasswordModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="changePasswordModalLabel">Change Password</h5>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="modal-body">
          <!-- Form for changing password -->
          <form id="changePassword" method="post">
            <div class="form-group">
              <label for="currentPassword">Current Password</label>
              <input type="password" class="form-control" id="currentPassword" placeholder="Enter current password">
              <small id="currentPasswordError" style="color: red;"></small>
            </div>
            <div class="form-group">
              <label for="newPassword">New Password</label>
              <input type="password" class="form-control" id="newPassword" placeholder="Enter new password">
              <small id="newPasswordError" style="color: red;"></small>
            </div>
            <div class="form-group">
              <label for="confirmPassword">Confirm New Password</label>
              <input type="password" class="form-control" id="confirmPassword" placeholder="Confirm new password">
              <small id="confirmPasswordError" style="color: red;"></small>
            </div>
            <button type="submit" class="btn btn-primary">Save changes</button>
            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
          </form>
        </div>
        <div class="modal-footer"></div>
      </div>
    </div>
  </div>
  


<!-- Edit Profile Modal -->
<div class="modal fade" id="editProfileModal" tabindex="-1" aria-labelledby="editProfileModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="editProfileModalLabel">Edit Profile</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <form id="editProfileForm" action="" method="POST">
          <div class="mb-3">
            <label for="fullName" class="form-label">Full Name</label>
            <input type="text" class="form-control" id="fullName" name="name" value="<%= user.name %>">
            <small id="nameError" style="color: red;"></small>
          </div>
          <div class="mb-3">
            <label for="phone" class="form-label">Mobile</label>
            <input type="text" class="form-control" id="phone" name="phone" value="<%= user.phone %>">
            <small id="phoneError" style="color: red;"></small>
          </div>
        </form>
      </div>
      <div class="modal-footer">
        <a href="/profile" class="btn btn-secondary" data-bs-dismiss="modal">Close</a>
        <button type="submit" class="btn btn-primary" form="editProfileForm">Save changes</button>
      </div>
    </div>
  </div>
</div>



  <!-- Bootstrap and jQuery scripts -->
  <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"></script>
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>

<script>
  // edit Profile
  document.getElementById("editProfileForm").addEventListener("submit", async (event) => {
    event.preventDefault(); 
    const name = document.getElementById('fullName').value.trim();
    const phone = document.getElementById('phone').value.trim();
    const nameError = document.getElementById('nameError');
    const phoneError = document.getElementById('phoneError');
    const nameRegex = /^[A-Za-z\s]+$/;
    const phonenumberRegex = /^[1-9](?!([0-9])\1{9})\d{9}/;

    nameError.innerHTML = '';
    phoneError.innerHTML = '';

    if (!nameRegex.test(name)) {
      nameError.innerHTML = "Enter a valid name";
      return;
    }
    if (!phonenumberRegex.test(phone)) {
      phoneError.innerHTML = "Enter a valid Phone Number";
      return;
    }

    const response = await fetch('/updateprofile', {
      method: "POST",
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({
        name,
        phone
      })
    });

    const data = await response.json();

    if (!data.success) {
      Toastify({
        text: data.message || "Error updating profile",
        backgroundColor: "linear-gradient(to right, #ff5f6d, #ffc371)",
        duration: 3000
      }).showToast();
    } else {
      Toastify({
        text: "Profile updated successfully!",
        backgroundColor: "linear-gradient(to right, #00b09b, #96c93d)",
        duration: 3000
      }).showToast();

      const modal = bootstrap.Modal.getInstance(document.getElementById('editProfileModal'));
      modal.hide();

      setTimeout(() => {
        window.location.reload();
      }, 1500); 
    }
  });


  document.getElementById('changePassword').addEventListener('submit', async (event) => {
  event.preventDefault();

  const currentPassword = document.getElementById('currentPassword').value.trim();
  const newPassword = document.getElementById('newPassword').value.trim();
  const confirmPassword = document.getElementById('confirmPassword').value.trim();

  const currentPasswordError = document.getElementById("currentPasswordError");
  const newPasswordError = document.getElementById("newPasswordError");
  const confirmPasswordError = document.getElementById('confirmPasswordError'); 

  currentPasswordError.innerHTML = "";
  newPasswordError.innerHTML = "";
  confirmPasswordError.innerHTML = "";

  const passwordRegex = /^[^\W_][\w\W]{5,}$/;

  if (!passwordRegex.test(currentPassword)) {
    return currentPasswordError.innerHTML = "Enter a valid current password.";
  }
  if (!passwordRegex.test(newPassword)) {
    return newPasswordError.innerHTML = "Password must be at least 6 characters long.";
  }

    if (newPassword !== confirmPassword) {
    return confirmPasswordError.innerHTML = "Passwords do not match.";
  }
  const response = await fetch('/changepassword', {
    method: "POST",
    headers: {
      'Content-Type': 'application/json'
    },
    body: JSON.stringify({
      currentPassword,
      newPassword,
      confirmPassword
    })
  });

  const data = await response.json();

  if (!data.success) {
    Toastify({
      text: data.message || "Error changing password",
      backgroundColor: "linear-gradient(to right, #ff5f6d, #ffc371)",
      duration: 3000
    }).showToast();
  } else {
    Toastify({
      text: "Password changed successfully!",
      backgroundColor: "linear-gradient(to right, #00b09b, #96c93d)",
      duration: 3000
    }).showToast();

    const modalElement = document.getElementById('changePasswordModal');
  const modal = bootstrap.Modal.getOrCreateInstance(modalElement);  
  modal.hide();
    setTimeout(() => {
      window.location.reload();
    }, 1500);
  }
});


document.getElementById('claimButton').addEventListener('click', async () => {
  const referralCode = document.getElementById('referralCode').value.trim();

  if (!referralCode) {
    Toastify({
      text: "Please enter a referral code.",
      backgroundColor: "linear-gradient(to right, #ff5f6d, #ffc371)",
      duration: 3000
    }).showToast();
    return;
  }

  try {
    const response = await fetch('/claimReferral', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ referralCode }),
    });

    const data = await response.json();

    if (data.success) {
      Toastify({
        text: data.message || "Referral bonus claimed successfully!",
        backgroundColor: "linear-gradient(to right, #00b09b, #96c93d)",
        duration: 3000
      }).showToast();
      setTimeout(() => {
        window.location.reload()
      }, 1000);
    } else {
      Toastify({
        text: data.message || "Something went wrong.",
        backgroundColor: "linear-gradient(to right, #ff5f6d, #ffc371)",
        duration: 3000
      }).showToast();
    }
  } catch (error) {
    console.error('Error:', error);
    // Toastify for network error
    Toastify({
      text: "Network error! Please try again later.",
      backgroundColor: "linear-gradient(to right, #ff5f6d, #ffc371)",
      duration: 3000
    }).showToast();
  }
});




</script>

</body>
</html>
